# Generated by Django 4.2.4 on 2023-10-12 16:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0006_alter_unfinishedtesting_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClosedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField(default=1, verbose_name='Вес')),
                ('text', models.TextField(verbose_name='Текст задания')),
                ('is_several_correct_answers', models.BooleanField(default=False, verbose_name='Несколько правильных ответов')),
                ('is_random_order_answer_options', models.BooleanField(default=False, verbose_name='Случайный порядок вариантов ответа')),
                ('is_partially_correct_execution', models.BooleanField(default=False, verbose_name='Учесть частично правильные выполнения задачи')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Testing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True, verbose_name='Наименование')),
                ('is_published', models.BooleanField(blank=True, default=True, verbose_name='Опубликовано')),
                ('is_review_of_result_by_student', models.BooleanField(blank=True, default=True, verbose_name='Просмотр результата студентом')),
                ('number', models.IntegerField(verbose_name='Номер работы')),
                ('likelihood_guessing_answers', models.FloatField(default=1, max_length=1, verbose_name='Вероятность угадывания правильных ответов')),
                ('assessment_threshold', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Пороговое значение оценки')),
                ('task_order', models.CharField(choices=[('Случайный', 'Случайный'), ('Установленный', 'Установленный')], verbose_name='Порядок задач')),
                ('lead_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Время выполнения')),
                ('task_lead_time', models.TimeField(blank=True, default=None, null=True, verbose_name='Время выполнения задачи')),
                ('student_groups', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', to='user.studentgroup', verbose_name='Группы студентов')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'db_table': 'testing_testing_t',
            },
        ),
        migrations.CreateModel(
            name='MaxScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('five', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Отлично')),
                ('four', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Хорошо')),
                ('three', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Удовлетворительно')),
                ('two', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(1)], verbose_name='Неудовлетворительно')),
                ('testing', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', to='testing.testing', verbose_name='Тестирование')),
            ],
            options={
                'db_table': 'testing_testing_maxScore',
            },
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст задания')),
                ('is_correct', models.BooleanField(verbose_name='Правильный')),
                ('closed_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', to='testing.closedquestion', verbose_name='Закрытый вопрос')),
            ],
            options={
                'db_table': 'testing_closedQuestion_answerOption',
            },
        ),
    ]
